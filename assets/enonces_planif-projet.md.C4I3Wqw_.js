import{_ as i,c as t,o as n,ag as o}from"./chunks/framework.39v_BxLl.js";const m=JSON.parse('{"title":"Énoncé – Planification du projet","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"enonces/planif-projet.md","filePath":"enonces/planif-projet.md"}'),r={name:"enonces/planif-projet.md"};function l(a,e,s,u,c,d){return n(),t("div",null,[...e[0]||(e[0]=[o('<h1 id="enonce-–-planification-du-projet" tabindex="-1">Énoncé – Planification du projet <a class="header-anchor" href="#enonce-–-planification-du-projet" aria-label="Permalink to &quot;Énoncé – Planification du projet&quot;">​</a></h1><h2 id="objectif" tabindex="-1">Objectif <a class="header-anchor" href="#objectif" aria-label="Permalink to &quot;Objectif&quot;">​</a></h2><p>Présenter la planification complète du projet que vous réaliserez pendant la session.</p><p>Ce document servira de référence pour :</p><ul><li>Valider la faisabilité technique et fonctionnelle du projet.</li><li>Organiser le développement en sprints.</li><li>Fournir un premier jalon d’évaluation.</li></ul><hr><h2 id="contenu-attendu" tabindex="-1">Contenu attendu <a class="header-anchor" href="#contenu-attendu" aria-label="Permalink to &quot;Contenu attendu&quot;">​</a></h2><p>Pour ce travail de planification, vous devez produire un <strong>document PDF</strong> structuré à l’aide des sections suivantes :</p><ol><li>Identification du projet</li><li>Récit utilisateur principal</li><li>Fonctionnalités prévues</li><li>Exigences techniques</li><li>Organisation du projet (récits utilisateurs)</li><li>Planification par sprints</li><li>Liens vers les outils</li></ol><h3 id="identification-du-projet" tabindex="-1">Identification du projet <a class="header-anchor" href="#identification-du-projet" aria-label="Permalink to &quot;Identification du projet&quot;">​</a></h3><ul><li><strong>Titre du projet</strong></li><li><strong>Membres de l’équipe</strong> (travail individuel priorisé)</li><li>A été approuvé par le professeur (oui/non -&gt; la réponse devrait être oui)</li></ul><h3 id="recit-utilisateur-principal" tabindex="-1">Récit utilisateur principal <a class="header-anchor" href="#recit-utilisateur-principal" aria-label="Permalink to &quot;Récit utilisateur principal&quot;">​</a></h3><p>Formulez un récit utilisateur qui décrit l’objectif général de l’application :</p><blockquote><p>En tant que <strong>[type d’utilisateur]</strong>, je veux <strong>[fonctionnalité]</strong> afin de <strong>[bénéfice ou valeur ajoutée]</strong>.</p></blockquote><div class="tip custom-block"><p class="custom-block-title">Astuce</p><p>Revisitez votre récit principal après avoir réalisé les autres section.</p></div><h3 id="fonctionnalites-prevues" tabindex="-1">Fonctionnalités prévues <a class="header-anchor" href="#fonctionnalites-prevues" aria-label="Permalink to &quot;Fonctionnalités prévues&quot;">​</a></h3><ul><li><p>Liste d&#39;au moins <strong>trois</strong> grandes fonctionnalités principales accompagnées d’une brève description.</p></li><li><p>Les fonctionnalités doivent être réalistes et non pas simplifiées, en respectant une complexité raisonnable.</p></li><li><p>Une fonctionnalité regroupe un ensemble de cas d&#39;utilisation.</p></li><li><p><strong>Le projet devra comporter une interface graphique et inclure au moins 2 vues (pages) différentes à intégrer à l’application :</strong></p><ul><li>Dans une application Desktop, 2 fenêtres constituent 2 vues.</li><li>Dans une application console, la console ne compte que pour une vue. Une seconde vue pourrait être une exportation de données sous un tableur.</li></ul></li><li><p><strong>Minimum requis</strong> :</p><ul><li><strong>Intégration de sons, d’images et de vidéos</strong> (pas de liens Youtube)</li><li>Persistance des données (dans un fichier ou une base de données)</li><li><strong>Formulaires</strong><ul><li>Par exemple:</li><li>Un formulaire offrant à l’utilisateur une personnalisation de l’interface (couleurs, polices, etc.) ; l’information recueillie étant consignée dans un fichier de préférences (ex.: AppSettings.json).</li><li>Un formulaire permettant de saisir les valeurs d’enregistrement pour un animal dans le contexte d’une application pour un cabinet vétérinaire.</li></ul></li><li><strong>Personnalisation de l’interface</strong> (options choisies par l’utilisateur, enregistrées dans un fichier de préférences)</li><li><strong>Tutoriel d’utilisation</strong> : Un court tutoriel d’aide à l’utilisation au format vidéo devra être accessible à même l’application. Cette fonctionnalité est en complément des 3 fonctionnalités minimalement requises.</li><li>Utilisation du <strong>principe de composition</strong> dans au moins une classe (relation un à plusieurs)</li></ul></li><li><p><strong>Fonctionnalités optionnelles envisagées</strong> (au moins une) :</p><ul><li>Dessin 2D</li><li>Tri / recherche</li><li>Génération de contenu par code</li><li>Effets visuels</li><li>Autre (au choix, à discuter)</li></ul></li><li><p><strong>Voici quelques types de projets pouvant être développés :</strong></p><ul><li>Application de gestion de données / fichiers.</li><li>Application d’analyse de données.</li><li>Jeu 2D.</li><li>Outil d’automatisation de tâches.</li><li>Autre : À valider avec l’enseignant.</li></ul></li></ul><h3 id="exigences-techniques" tabindex="-1">Exigences techniques <a class="header-anchor" href="#exigences-techniques" aria-label="Permalink to &quot;Exigences techniques&quot;">​</a></h3><ul><li>Langage de programmation (doit être orienté objet et approuvé par le prof).</li><li>Type de fichier ou base de données pour la persistence des données.</li><li>Environnement de développement.</li><li>Versionnement du code (GitHub).</li><li>Suivi du projet (GitHub Project).</li><li>Bibliothèques, frameworks ou modules tiers (<strong>à approuver</strong>).</li><li>Formats des fichiers utilisés (images, sons, vidéos, <code>.json</code>, <code>.config</code>, etc.).</li><li>Plateformes cibles (ex. : Windows, tablette, téléphone).</li></ul><h3 id="organisation-du-projet-backlog-produit" tabindex="-1">Organisation du projet (Backlog produit) <a class="header-anchor" href="#organisation-du-projet-backlog-produit" aria-label="Permalink to &quot;Organisation du projet (Backlog produit)&quot;">​</a></h3><ul><li>Vous devez décrire votre projet sous forme de récits utilisateurs (Qui, Quoi, Pourquoi). Voir section <a href="./../ressources/userstory">récits utilisateurs</a>. <ul><li>Par exemple : <ul><li>En tant qu’utilisateur, je veux me connecter à l’application avec mon nom d’utilisateur et mon mot de passe afin d’accéder aux fonctionnalités qui me sont réservées.</li><li>En tant qu’usager, je veux pouvoir rechercher un livre par titre, auteur ou catégorie afin de trouver rapidement les ouvrages disponibles.</li><li>etc.</li></ul></li></ul></li><li>Vous devrez créer ces récits dans votre outil de gestion de projet (GitHub Project). <ul><li>Les récits doivent tous être sous la colonne Backlog. Ils seront placés dans les sprints lors des planifications de sprint.</li></ul></li><li>Identification des dépendances (quelles tâches doivent précéder les autres)</li></ul><p>Exemple de tableau à inclure à votre remise:</p><table tabindex="0"><thead><tr><th>ID récit</th><th>Titre</th><th>Estimation (h)</th><th>Responsable</th><th>Dépendances</th></tr></thead><tbody><tr><td>1</td><td>Ex : Implémenter le menu principal</td><td>5 h</td><td>Alex</td><td>—</td></tr><tr><td>2</td><td>Ex : Intégrer l’API vidéo d’aide</td><td>4 h</td><td>Sam</td><td>Récit 1</td></tr></tbody></table><h3 id="planification-par-sprints" tabindex="-1">Planification par sprints <a class="header-anchor" href="#planification-par-sprints" aria-label="Permalink to &quot;Planification par sprints&quot;">​</a></h3><ul><li><strong>Sprint 1</strong> : objectifs et critères de complétion</li><li><strong>Sprint 2</strong> : objectifs et critères de complétion</li><li><strong>Sprint 3</strong> : objectifs et critères de complétion</li></ul><h3 id="liens-vers-les-outils" tabindex="-1">Liens vers les outils <a class="header-anchor" href="#liens-vers-les-outils" aria-label="Permalink to &quot;Liens vers les outils&quot;">​</a></h3><ul><li>Lien vers le tableau <strong>Kanban</strong> (GitHub Projects). <ul><li>Votre tableau doit contenir les colonnes : <code>Backlog</code>, <code>À faire</code>, <code>En cours</code>, <code>Terminée</code>, <code>Bogues et finition</code></li></ul></li><li>Lien vers le dépôt GitHub <ul><li>Vous devez ajouter mon utilisateur <strong>oliviertremblay</strong> dans votre répertoire ET votre projet</li></ul></li></ul><hr><h2 id="procedure-de-remise" tabindex="-1">Procédure de remise <a class="header-anchor" href="#procedure-de-remise" aria-label="Permalink to &quot;Procédure de remise&quot;">​</a></h2><ul><li><p><strong>À remettre sur LÉA</strong> un document PDF nommé :<br><code>Planification_Nom1_Nom2.pdf</code></p></li><li><p>N’oubliez pas de m’ajouter à votre répertoire et à votre projet GitHub.</p></li><li><p><strong>Rédaction claire</strong>, sans fautes majeures de français</p><ul><li><em>(-0,25 % par faute, max. -20 %)</em></li></ul></li><li><p>Présentation structurée avec titres et sous-titres</p></li></ul><div class="warning custom-block"><p class="custom-block-title">Date limite</p><p>Vendredi <strong>12 septembre à 16h00</strong><br> Pénalité : -10 % par jour de retard (maximum 3 jours)</p></div><div class="tip custom-block"><p class="custom-block-title">Rappel</p><p><a href="./../grilles/grille-planif-projet">Voir la grille de correction avec critères détaillés.</a></p></div>',32)])])}const f=i(r,[["render",l]]);export{m as __pageData,f as default};
