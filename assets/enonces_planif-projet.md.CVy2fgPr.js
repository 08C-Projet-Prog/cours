import{_ as i,c as t,o as r,ag as o}from"./chunks/framework.fe_4N7Ew.js";const h=JSON.parse('{"title":"Énoncé – Planification du projet","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"enonces/planif-projet.md","filePath":"enonces/planif-projet.md"}'),n={name:"enonces/planif-projet.md"};function a(l,e,s,u,c,d){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="enonce-–-planification-du-projet" tabindex="-1">Énoncé – Planification du projet <a class="header-anchor" href="#enonce-–-planification-du-projet" aria-label="Permalink to &quot;Énoncé – Planification du projet&quot;">​</a></h1><h2 id="objectif" tabindex="-1">Objectif <a class="header-anchor" href="#objectif" aria-label="Permalink to &quot;Objectif&quot;">​</a></h2><p>Présenter la planification complète du projet que vous réaliserez pendant la session.</p><p>Ce document servira de référence pour :</p><ul><li>Valider la faisabilité technique et fonctionnelle du projet.</li><li>Organiser le développement en sprints.</li><li>Fournir un premier jalon d’évaluation.</li></ul><hr><h2 id="contenu-attendu" tabindex="-1">Contenu attendu <a class="header-anchor" href="#contenu-attendu" aria-label="Permalink to &quot;Contenu attendu&quot;">​</a></h2><h3 id="identification-du-projet" tabindex="-1">Identification du projet <a class="header-anchor" href="#identification-du-projet" aria-label="Permalink to &quot;Identification du projet&quot;">​</a></h3><ul><li><strong>Titre du projet</strong></li><li><strong>Membres de l’équipe</strong> (travail individuel priorisé)</li><li><strong>Langage de programmation et environnement de développement (IDE)</strong><ul><li>Doit être orienté objet</li><li>Permettre la création d’un exécutable fenêtré (<code>.exe</code>) sous Windows</li><li>Être approuvé par le professeur</li></ul></li></ul><h3 id="recit-utilisateur-principal" tabindex="-1">Récit utilisateur principal <a class="header-anchor" href="#recit-utilisateur-principal" aria-label="Permalink to &quot;Récit utilisateur principal&quot;">​</a></h3><p>Formulez un récit utilisateur qui décrit l’objectif général de l’application :</p><blockquote><p>En tant que <strong>[type d’utilisateur]</strong>, je veux <strong>[fonctionnalité]</strong> afin de <strong>[bénéfice ou valeur ajoutée]</strong>.</p></blockquote><h3 id="fonctionnalites-prevues" tabindex="-1">Fonctionnalités prévues <a class="header-anchor" href="#fonctionnalites-prevues" aria-label="Permalink to &quot;Fonctionnalités prévues&quot;">​</a></h3><ul><li><p>Liste des fonctionnalités principales accompagnées d’une brève description.</p></li><li><p><strong>Minimum requis</strong> :</p><ul><li>Intégration de sons, d’images et de vidéos</li><li>Persistance des données</li><li>Formulaires</li><li>Personnalisation de l’interface (options choisies par l’utilisateur, enregistrées dans un fichier de préférences)</li><li>Utilisation du <strong>principe de composition</strong> dans au moins une classe</li></ul></li><li><p><strong>Fonctionnalités optionnelles envisagées</strong> (au moins une) :</p><ul><li>Dessin 2D</li><li>Tri / recherche</li><li>Génération de contenu par code</li><li>Effets visuels</li><li>Autre (au choix, à discuter)</li></ul></li></ul><h3 id="exigences-techniques" tabindex="-1">Exigences techniques <a class="header-anchor" href="#exigences-techniques" aria-label="Permalink to &quot;Exigences techniques&quot;">​</a></h3><ul><li>Bibliothèques, frameworks ou modules tiers (<strong>à approuver</strong>).</li><li>Formats des fichiers utilisés (images, sons, vidéos, <code>.json</code>, <code>.config</code>, etc.).</li><li>Plateformes cibles (ex. : Windows, tablette, téléphone).</li></ul><h3 id="organisation-du-projet" tabindex="-1">Organisation du projet <a class="header-anchor" href="#organisation-du-projet" aria-label="Permalink to &quot;Organisation du projet&quot;">​</a></h3><ul><li>Découpage préliminaire en tâches</li><li>Répartition des tâches si en équipe</li><li>Identification des dépendances (quelles tâches doivent précéder les autres)</li></ul><h3 id="planification-par-sprints" tabindex="-1">Planification par sprints <a class="header-anchor" href="#planification-par-sprints" aria-label="Permalink to &quot;Planification par sprints&quot;">​</a></h3><ul><li><strong>Sprint 1</strong> : objectifs et critères de complétion</li><li><strong>Sprint 2</strong> : objectifs et critères de complétion</li><li><strong>Sprint 3</strong> : objectifs et critères de complétion</li></ul><h3 id="liens-vers-les-outils" tabindex="-1">Liens vers les outils <a class="header-anchor" href="#liens-vers-les-outils" aria-label="Permalink to &quot;Liens vers les outils&quot;">​</a></h3><ul><li>Lien vers le tableau <strong>Kanban</strong> (GitHub Projects). <ul><li>Votre tableau doit contenir les colonnes : <code>Backlog</code>, <code>À faire</code>, <code>En cours</code>, <code>Terminée</code>, <code>Bogues</code></li></ul></li><li>Lien vers le dépôt GitHub <ul><li>Vous devez ajouter mon utilisateur <strong>oliviertremblay</strong> dans votre répertoire ET votre projet</li></ul></li></ul><hr><h2 id="procedure-de-remise" tabindex="-1">Procédure de remise <a class="header-anchor" href="#procedure-de-remise" aria-label="Permalink to &quot;Procédure de remise&quot;">​</a></h2><ul><li><p><strong>À remettre sur LÉA</strong> un document PDF nommé :<br><code>Planification_Nom1_Nom2.pdf</code></p></li><li><p>N’oubliez pas de m’ajouter à votre répertoire et à votre projet GitHub.</p></li><li><p><strong>Longueur</strong> : environ 2 à 4 pages</p></li><li><p><strong>Rédaction claire</strong>, sans fautes majeures de français</p><ul><li><em>(-0,25 % par faute, max. -20 %)</em></li></ul></li><li><p>Présentation structurée avec titres et sous-titres</p></li></ul><div class="warning custom-block"><p class="custom-block-title">Date limite</p><p>Vendredi <strong>12 septembre à 16h00</strong><br> Pénalité : -10 % par jour de retard (maximum 3 jours)</p></div><div class="tip custom-block"><p class="custom-block-title">Rappel</p><p><a href="./../grilles/grille-planif-projet">Voir la grille de correction avec critères détaillés.</a></p></div>',27)]))}const m=i(n,[["render",a]]);export{h as __pageData,m as default};
